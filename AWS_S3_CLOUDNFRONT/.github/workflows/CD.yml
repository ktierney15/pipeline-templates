name: CD 
on:
  workflow_dispatch:
  
jobs:
  Pre-Check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Check if you are executing from a branch and exit if so ## MUST EXECUTE FROM TAG ##
      - name: Get branch or tag name
        run: echo "REF_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/')" >> $GITHUB_ENV

      - name: Check if it's a tag
        run: |
          if [[ -z "${REF_NAME}" ]]; then
            echo "This is not a tag. Exiting..."
            exit 1
          fi

  Deploy:
    # needs: Pre-Check
    runs-on: ubuntu-latest
    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get version
        id: version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # or 18

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Move Build Output to IAC Folder
        run: |
          mkdir -p ./IAC/build
          mv ./build/* ./IAC/build/
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./IAC

      - name: Validate Terraform
        run: terraform validate
        working-directory: ./IAC

      - name: Plan Terraform
        run: terraform plan -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var="app_name=${{ github.event.repository.name }}" -var="source_path=./build" -var="ver=${{ steps.version.outputs.VERSION }}" -var="route53_zone_id=${{ vars.ROUTE53_ZONE_ID }}" -var="domain_name=${{ vars.DOMAIN_NAME }}" -out=plan.tfplan
        working-directory: ./IAC

      - name: Apply Terraform
        run: terraform apply -auto-approve plan.tfplan
        working-directory: ./IAC
